{"version":3,"sources":["redux/actions/logActions.js","redux/actions/types.js","components/layout/SearchBar.js","components/layout/AddBtn.js","components/layout/Preloader.js","components/logs/LogItem.js","components/logs/Logs.js","redux/actions/techActions.js","components/techs/TechSelectOptions.js","components/logs/AddLogModal.js","components/logs/EditLogModal.js","components/techs/TechItem.js","components/techs/TechListModal.js","components/techs/AddTechModal.js","redux/reducers/logReducer.js","redux/reducers/techReducer.js","redux/reducers/rootReducer.js","redux/store.js","App.js","index.js"],"names":["setLoading","type","mapDispatchtoProps","searchLogs","text","dispatch","a","fetch","res","json","data","payload","response","statusText","connect","useRef","style","marginBottom","className","id","placeholder","ref","onChange","e","current","value","htmlFor","AddBtn","href","Preloader","mapDispatchToProps","deleteLog","method","setCurrent","log","attention","onClick","message","tech","format","date","M","toast","html","classes","getLogs","state","logs","loading","useEffect","length","map","key","getTechs","techs","t","firstName","lastName","addLog","body","JSON","stringify","headers","modalStyle","width","height","useState","setMessage","setAttention","setTech","name","target","disabled","checked","newLog","Date","updateLog","updatedLog","deleteTech","addTech","setFirstName","setLastName","initialState","error","combineReducers","action","filter","console","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","AutoInit","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a7d0b962.chunk.js","sourcesContent":["import {\r\n  GET_LOGS,\r\n  SET_LOADING,\r\n  LOGS_ERRORS,\r\n  ADD_LOG,\r\n  DELETE_LOG,\r\n  UPDATE_LOG,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  SEARCH_LOGS\r\n} from './types';\r\n\r\n// export const getLogs = () => {\r\n//   return async dispatch => {\r\n//     setLoading();\r\n\r\n//     const res = await fetch('/logs');\r\n//     const data = await res.json();\r\n\r\n//     dispatch({\r\n//       type: GET_LOGS,\r\n//       payload: data\r\n//     });\r\n//   };\r\n// };\r\n\r\n// Get logs from server\r\nexport const getLogs = () => async dispatch => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch('/logs');\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: GET_LOGS,\r\n      payload: data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGS_ERRORS,\r\n      payload: err.response.statusText\r\n    });\r\n  }\r\n};\r\n\r\n// Add new log\r\nexport const addLog = log => async dispatch => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch('/logs', {\r\n      method: 'POST',\r\n      body: JSON.stringify(log),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: ADD_LOG,\r\n      payload: data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGS_ERRORS,\r\n      payload: err.response.statusText\r\n    });\r\n  }\r\n};\r\n\r\n// Delete log from server\r\nexport const deleteLog = id => async dispatch => {\r\n  try {\r\n    setLoading();\r\n\r\n    await fetch(`/logs/${id}`, {\r\n      method: 'DELETE'\r\n    });\r\n\r\n    dispatch({\r\n      type: DELETE_LOG,\r\n      payload: id\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGS_ERRORS,\r\n      payload: err.response.statusText\r\n    });\r\n  }\r\n};\r\n\r\n// Update log on server\r\nexport const updateLog = log => async dispatch => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch(`/logs/${log.id}`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(log),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: UPDATE_LOG,\r\n      payload: data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGS_ERRORS,\r\n      payload: err.response.statusText\r\n    });\r\n  }\r\n};\r\n\r\n// Search logs from server\r\nexport const searchLogs = text => async dispatch => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch(`/logs?q=${text}`);\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: SEARCH_LOGS,\r\n      payload: data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGS_ERRORS,\r\n      payload: err.response.statusText\r\n    });\r\n  }\r\n};\r\n\r\n// Set current\r\nexport const setCurrent = log => {\r\n  return {\r\n    type: SET_CURRENT,\r\n    payload: log\r\n  };\r\n};\r\n\r\n// Clear current\r\nexport const clearCurrent = () => {\r\n  return {\r\n    type: CLEAR_CURRENT\r\n  };\r\n};\r\n\r\n// Set loading to true\r\nexport const setLoading = () => {\r\n  return {\r\n    type: SET_LOADING\r\n  };\r\n};\r\n","export const GET_LOGS = 'GET_LOGS';\r\nexport const ADD_LOG = 'ADD_LOG';\r\nexport const DELETE_LOG = 'DELETE_LOG';\r\nexport const UPDATE_LOG = 'UPDATE_LOG';\r\n\r\nexport const SET_CURRENT = 'SET_CURRENT';\r\nexport const CLEAR_CURRENT = 'CLEAR_CURRENT';\r\n\r\nexport const SET_LOADING = 'SET_LOADING';\r\n\r\nexport const CLEAR_LOGS = 'CLEAR_LOGS';\r\nexport const LOGS_ERRORS = 'LOGS_ERRORS';\r\nexport const SEARCH_LOGS = 'SEARCH_LOGS';\r\n\r\nexport const GET_TECHS = 'GET_TECHS';\r\nexport const ADD_TECH = 'ADD_TECH';\r\nexport const DELETE_TECH = 'DELETE_TECH';\r\nexport const TECHS_ERROR = 'TECHS_ERROR';\r\n","import React, { useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { searchLogs } from '../../redux/actions/logActions';\r\n\r\nconst SearchBar = ({ searchLogs }) => {\r\n  const text = useRef('');\r\n\r\n  const onChange = e => {\r\n    searchLogs(text.current.value);\r\n  };\r\n\r\n  return (\r\n    <nav style={{ marginBottom: '30px' }} className='blue'>\r\n      <div className='nav-wrapper'>\r\n        <form>\r\n          <div className='input-field'>\r\n            <input\r\n              id='search'\r\n              type='search'\r\n              placeholder='Search Logs...'\r\n              ref={text}\r\n              onChange={onChange}\r\n            />\r\n            <label className='label-icon' htmlFor='search'>\r\n              <i className='material-icons'>search</i>\r\n            </label>\r\n            <i className='material-icons'>close</i>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nSearchBar.propTypes = {\r\n  searchLogs: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapDispatchtoProps = {\r\n  searchLogs\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchtoProps\r\n)(SearchBar);\r\n","import React from 'react';\r\n\r\nconst AddBtn = () => {\r\n  return (\r\n    <div className='fixed-action-btn'>\r\n      <a\r\n        href='#add-log-modal'\r\n        className='btn-floating btn-large blue darken-2 modal-trigger'\r\n      >\r\n        <i className='large material-icons'>add</i>\r\n      </a>\r\n      <ul>\r\n        <li>\r\n          <a\r\n            href='#tech-list-modal'\r\n            className='btn-floating green modal-trigger'\r\n          >\r\n            <i className='material-icons'>person</i>\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a href='#add-tech-modal' className='btn-floating red modal-trigger'>\r\n            <i className='material-icons'>person_add</i>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddBtn;\r\n","import React from 'react';\r\n\r\nconst Preloader = () => {\r\n  return (\r\n    <div className='progress blue lighten-4'>\r\n      <div className='indeterminate blue'></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preloader;\r\n","import React from 'react';\r\nimport Moment from 'react-moment';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { deleteLog, setCurrent } from '../../redux/actions/logActions';\r\n\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst LogItem = ({ log, deleteLog, setCurrent }) => {\r\n  const onDelete = () => {\r\n    deleteLog(log.id);\r\n\r\n    M.toast({ html: 'Log Deleted', classes: 'green' });\r\n  };\r\n\r\n  return (\r\n    <li className='collection-item'>\r\n      <div>\r\n        <a\r\n          href='#edit-log-modal'\r\n          className={`modal-trigger ${\r\n            log.attention ? 'red-text' : 'blue-text'\r\n          }`}\r\n          onClick={() => setCurrent(log)}\r\n        >\r\n          {log.message}\r\n        </a>\r\n        <br />\r\n        <span className='grey-text'>\r\n          <span className='black-text'>ID # {log.id}</span> last updated by{' '}\r\n          <span className='black-text'>{log.tech}</span> on{' '}\r\n          <Moment format='MMMM Do YYYY, h:mm:ss a'>{log.date}</Moment>\r\n        </span>\r\n        <a href='#!' className='secondary-content' onClick={onDelete}>\r\n          <i className='material-icons grey-text'>delete</i>\r\n        </a>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nLogItem.propTypes = {\r\n  log: PropTypes.object.isRequired,\r\n  deleteLog: PropTypes.func.isRequired,\r\n  setCurrent: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  deleteLog,\r\n  setCurrent\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(LogItem);\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Preloader from '../layout/Preloader';\r\n\r\nimport LogItem from './LogItem';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { getLogs } from '../../redux/actions/logActions';\r\n\r\nconst Logs = ({ log: { logs, loading }, getLogs }) => {\r\n  useEffect(() => {\r\n    getLogs();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  if (loading || logs === null) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  return (\r\n    <ul className='collection with-header'>\r\n      <li className='collection-header'>\r\n        <h4 className='center'>System Logs</h4>\r\n      </li>\r\n      {!loading && logs.length === 0 ? (\r\n        <p className='center'>No logs to show...</p>\r\n      ) : (\r\n        logs.map(log => <LogItem key={log.id} log={log} />)\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nLogs.propTypes = {\r\n  log: PropTypes.object.isRequired,\r\n  getLogs: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  log: state.log\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getLogs\r\n};\r\n\r\n// export default connect(\r\n//   mapStateToProps,\r\n//   { getLogs }\r\n// )(Logs);\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Logs);\r\n","import {\r\n  GET_TECHS,\r\n  ADD_TECH,\r\n  DELETE_TECH,\r\n  SET_LOADING,\r\n  TECHS_ERROR\r\n} from './types';\r\n\r\n// Get Techs from server\r\nexport const getTechs = () => async dispatch => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch('/techs');\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: GET_TECHS,\r\n      payload: data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: TECHS_ERROR,\r\n      payload: err.response.statusText\r\n    });\r\n  }\r\n};\r\n\r\n// Add tech to server\r\nexport const addTech = tech => async dispatch => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch('/techs', {\r\n      method: 'POST',\r\n      body: JSON.stringify(tech),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: ADD_TECH,\r\n      payload: data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: TECHS_ERROR,\r\n      payload: err.response.statusText\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteTech = id => async dispatch => {\r\n  try {\r\n    setLoading();\r\n\r\n    await fetch(`techs/${id}`, {\r\n      method: 'DELETE'\r\n    });\r\n\r\n    dispatch({\r\n      type: DELETE_TECH,\r\n      payload: id\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: TECHS_ERROR,\r\n      payload: err.response.statusText\r\n    });\r\n  }\r\n};\r\n\r\n// Set loading to true\r\nexport const setLoading = () => {\r\n  return {\r\n    type: SET_LOADING\r\n  };\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { getTechs } from '../../redux/actions/techActions';\r\n\r\nconst TechSelectOptions = ({ getTechs, tech: { techs, loading } }) => {\r\n  useEffect(() => {\r\n    getTechs();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    !loading &&\r\n    techs !== null &&\r\n    techs.map(t => (\r\n      <option key={t.id} value={`${t.firstName} ${t.lastName}`}>\r\n        {t.firstName} {t.lastName}\r\n      </option>\r\n    ))\r\n  );\r\n};\r\n\r\nTechSelectOptions.propTypes = {\r\n  tech: PropTypes.object.isRequired,\r\n  getTechs: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  tech: state.tech\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getTechs }\r\n)(TechSelectOptions);\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport TechSelectOptions from '../techs/TechSelectOptions';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { addLog } from '../../redux/actions/logActions';\r\n\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst AddLogModal = ({ addLog }) => {\r\n  const [message, setMessage] = useState('');\r\n  const [attention, setAttention] = useState(false);\r\n  const [tech, setTech] = useState('');\r\n\r\n  const onSubmit = () => {\r\n    if (message === '' || tech === '') {\r\n      M.toast({ html: 'Please enter the message and tech', classes: 'red' });\r\n    } else {\r\n      const newLog = {\r\n        message,\r\n        attention,\r\n        tech,\r\n        date: new Date()\r\n      };\r\n\r\n      addLog(newLog);\r\n\r\n      M.toast({ html: `Log added by ${tech}`, classes: 'green' });\r\n\r\n      // Clear fields\r\n      setMessage('');\r\n      setAttention(false);\r\n      setTech('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id='add-log-modal' className='modal' style={modalStyle}>\r\n      <div className='modal-content'>\r\n        <h4>Enter System Log</h4>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <input\r\n              type='text'\r\n              name='message'\r\n              value={message}\r\n              onChange={e => setMessage(e.target.value)}\r\n            />\r\n            <label htmlFor='message' className='active'>\r\n              Log Message\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <select\r\n              name='tech'\r\n              value={tech}\r\n              className='browser-default'\r\n              onChange={e => setTech(e.target.value)}\r\n            >\r\n              <option value='' disabled>\r\n                Select Technician\r\n              </option>\r\n              <TechSelectOptions />\r\n            </select>\r\n          </div>\r\n          <div className='row'>\r\n            <div className='input-field'>\r\n              <p>\r\n                <label>\r\n                  <input\r\n                    type='checkbox'\r\n                    className='filled-in'\r\n                    checked={attention}\r\n                    value={attention}\r\n                    onChange={e => setAttention(!attention)}\r\n                  />\r\n                  <span>Needs Attention</span>\r\n                </label>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <a\r\n          href='#!'\r\n          onClick={onSubmit}\r\n          className='modal-close waves-effect blue waves-light btn'\r\n        >\r\n          Enter\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nAddLogModal.propTypes = {\r\n  addLog: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  addLog\r\n};\r\n\r\nconst modalStyle = {\r\n  width: '75%',\r\n  height: '75%'\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(AddLogModal);\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport TechSelectOptions from '../techs/TechSelectOptions';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { updateLog } from '../../redux/actions/logActions';\r\n\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst EditLogModal = ({ current, updateLog }) => {\r\n  const [message, setMessage] = useState('');\r\n  const [attention, setAttention] = useState(false);\r\n  const [tech, setTech] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (current) {\r\n      setMessage(current.message);\r\n      setAttention(current.attention);\r\n      setTech(current.tech);\r\n    }\r\n  }, [current]);\r\n\r\n  const onSubmit = () => {\r\n    if (message === '' || tech === '') {\r\n      M.toast({ html: 'Please enter the message and tech', classes: 'red' });\r\n    } else {\r\n      const updatedLog = {\r\n        id: current.id,\r\n        message,\r\n        attention,\r\n        tech,\r\n        date: new Date()\r\n      };\r\n\r\n      updateLog(updatedLog);\r\n\r\n      M.toast({ html: `Log updated by ${tech}`, classes: 'blue' });\r\n\r\n      // Clear fields\r\n      setMessage('');\r\n      setAttention(false);\r\n      setTech('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id='edit-log-modal' className='modal' style={modalStyle}>\r\n      <div className='modal-content'>\r\n        <h4>Enter System Log</h4>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <input\r\n              type='text'\r\n              name='message'\r\n              value={message}\r\n              onChange={e => setMessage(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <select\r\n              name='tech'\r\n              value={tech}\r\n              className='browser-default'\r\n              onChange={e => setTech(e.target.value)}\r\n            >\r\n              <option value='' disabled>\r\n                Select Technician\r\n              </option>\r\n             <TechSelectOptions />\r\n            </select>\r\n          </div>\r\n          <div className='row'>\r\n            <div className='input-field'>\r\n              <p>\r\n                <label>\r\n                  <input\r\n                    type='checkbox'\r\n                    className='filled-in'\r\n                    checked={attention}\r\n                    value={attention}\r\n                    onChange={e => setAttention(!attention)}\r\n                  />\r\n                  <span>Needs Attention</span>\r\n                </label>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <a\r\n          href='#!'\r\n          onClick={onSubmit}\r\n          className='modal-close waves-effect blue waves-light btn'\r\n        >\r\n          Enter\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst modalStyle = {\r\n  width: '75%',\r\n  height: '75%'\r\n};\r\n\r\nEditLogModal.propTypes = {\r\n  current: PropTypes.object,\r\n  updateLog: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  current: state.log.current\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  updateLog\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(EditLogModal);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { deleteTech } from '../../redux/actions/techActions';\r\n\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst TechItem = ({ tech, deleteTech }) => {\r\n  const onDelete = () => {\r\n    deleteTech(tech.id);\r\n    M.toast({\r\n      html: `Removed Technician: ${tech.firstName} ${tech.lastName}`\r\n    });\r\n  };\r\n\r\n  return (\r\n    <li className='collection-item'>\r\n      <div>\r\n        {tech.firstName} {tech.lastName}\r\n        <a href='#!' className='secondary-content'>\r\n          <i className='material-icons grey-text' onClick={onDelete}>\r\n            delete\r\n          </i>\r\n        </a>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nTechItem.propTypes = {\r\n  tech: PropTypes.object.isRequired,\r\n  deleteTech: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteTech }\r\n)(TechItem);\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport TechItem from './TechItem';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { getTechs } from '../../redux/actions/techActions';\r\n\r\nconst TechListModal = ({ tech: { techs, loading }, getTechs }) => {\r\n  useEffect(() => {\r\n    getTechs();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div id='tech-list-modal' className='modal'>\r\n      <div className='modal-content'>\r\n        <h4>Technicians List</h4>\r\n        <ul className='collection'>\r\n          {!loading &&\r\n            techs !== null &&\r\n            techs.map(tech => <TechItem tech={tech} key={tech.id} />)}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTechListModal.propTypes = {\r\n  tech: PropTypes.object.isRequired,\r\n  getTechs: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  tech: state.tech\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getTechs }\r\n)(TechListModal);\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { addTech } from '../../redux/actions/techActions';\r\n\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst AddTechModal = ({ addTech }) => {\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n\r\n  const onSubmit = () => {\r\n    if (firstName === '' || lastName === '') {\r\n      M.toast({ html: 'Please enter first and last name', classes: 'red' });\r\n    } else {\r\n      addTech({\r\n        firstName,\r\n        lastName\r\n      });\r\n\r\n      M.toast({ html: `New Technician: ${firstName} ${lastName}` });\r\n\r\n      // Clear fields\r\n      setFirstName('');\r\n      setLastName('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id='add-tech-modal' className='modal'>\r\n      <div className='modal-content'>\r\n        <h4>New Technician</h4>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <input\r\n              type='text'\r\n              name='firstName'\r\n              value={firstName}\r\n              onChange={e => setFirstName(e.target.value)}\r\n            />\r\n            <label htmlFor='firstName' className='active'>\r\n              First Name\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <input\r\n              type='text'\r\n              name='lastName'\r\n              value={lastName}\r\n              onChange={e => setLastName(e.target.value)}\r\n            />\r\n            <label htmlFor='lastName' className='active'>\r\n              Last Name\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <a\r\n          href='#!'\r\n          onClick={onSubmit}\r\n          className='modal-close waves-effect blue waves-light btn'\r\n        >\r\n          Enter\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nAddTechModal.propTypes = {\r\n  addTech: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { addTech }\r\n)(AddTechModal);\r\n","import {\r\n  GET_LOGS,\r\n  SET_LOADING,\r\n  LOGS_ERRORS,\r\n  ADD_LOG,\r\n  DELETE_LOG,\r\n  UPDATE_LOG,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  SEARCH_LOGS\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  logs: null,\r\n  current: null,\r\n  loading: false,\r\n  error: null\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_LOGS:\r\n      return {\r\n        ...state,\r\n        logs: action.payload,\r\n        loading: false\r\n      };\r\n\r\n    case ADD_LOG:\r\n      return {\r\n        ...state,\r\n        logs: [...state.logs, action.payload],\r\n        loading: false\r\n      };\r\n\r\n    case DELETE_LOG:\r\n      return {\r\n        ...state,\r\n        logs: state.logs.filter(log => log.id !== action.payload),\r\n        loading: false\r\n      };\r\n\r\n    case UPDATE_LOG:\r\n      return {\r\n        ...state,\r\n        logs: state.logs.map(log =>\r\n          log.id === action.payload.id ? action.payload : log\r\n        )\r\n      };\r\n\r\n    case SEARCH_LOGS:\r\n      return {\r\n        ...state,\r\n        logs: action.payload\r\n      };\r\n\r\n    case SET_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: action.payload\r\n      };\r\n\r\n    case CLEAR_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: null\r\n      };\r\n\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n\r\n    case LOGS_ERRORS:\r\n      console.error(action.payload);\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  SET_LOADING,\r\n  GET_TECHS,\r\n  ADD_TECH,\r\n  DELETE_TECH,\r\n  TECHS_ERROR\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  techs: null,\r\n  loading: false,\r\n  error: null\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_TECHS:\r\n      return {\r\n        ...state,\r\n        techs: action.payload,\r\n        loading: false\r\n      };\r\n\r\n    case ADD_TECH: {\r\n      return {\r\n        ...state,\r\n        techs: [...state.techs, action.payload],\r\n        loading: false\r\n      };\r\n    }\r\n\r\n    case DELETE_TECH:\r\n      return {\r\n        ...state,\r\n        techs: state.techs.filter(tech => tech.id !== action.payload),\r\n        loading: false\r\n      };\r\n\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n\r\n    case TECHS_ERROR:\r\n      console.error(action.payload);\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\n\r\nimport logReducer from './logReducer';\r\nimport techReducer from './techReducer';\r\n\r\nexport default combineReducers({\r\n  log: logReducer,\r\n  tech: techReducer\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from './reducers/rootReducer';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { Fragment, useEffect } from 'react';\r\n\r\nimport SearchBar from './components/layout/SearchBar';\r\nimport AddBtn from './components/layout/AddBtn';\r\n\r\nimport Logs from './components/logs/Logs';\r\nimport AddLogModal from './components/logs/AddLogModal';\r\nimport EditLogModal from './components/logs/EditLogModal';\r\n\r\nimport TechListModal from './components/techs/TechListModal';\r\nimport AddTechModal from './components/techs/AddTechModal';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nimport 'materialize-css/dist/css/materialize.min.css';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  useEffect(() => {\r\n    // Init Materialize JS\r\n    M.AutoInit();\r\n  }, []);\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <Fragment>\r\n        <SearchBar />\r\n        <div className='container'>\r\n          <AddBtn />\r\n          <AddLogModal />\r\n          <EditLogModal />\r\n          <AddTechModal />\r\n          <TechListModal />\r\n          <Logs />\r\n        </div>\r\n      </Fragment>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}